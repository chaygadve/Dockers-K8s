# please use ubuntu 20.04 LTS
# open all ports among all nodes -- in training only

Fire below commands on master and worker nodes 

Step1. Setup hostnames

sudo -i
hostnamectl set-hostname master
bash
hostnamectl set-hostname worker1
bash
hostnamectl set-hostname worker2
bash

Step2 : (Fire on all nodes)

# disable swap (Fire on all nodes)
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Step3 (Fire on all nodes-copy all lines together)

sudo tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF

Step4: (Fire on all nodes-copy all lines together)

sudo modprobe overlay
sudo modprobe br_netfilter

Step5: (Fire on all nodes-copy all lines together)

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

Step6: (Fire on all nodes)

sudo sysctl --system

Step7: (Fire on all nodes-line by line)
apt update -y
sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install -y containerd.io
systemctl status containerd.service
containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
systemctl restart containerd
sudo systemctl enable containerd

Step8: (Fire on all nodes -- line by line)

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt update
sudo apt-get install -y kubelet=1.24.0-00 kubeadm=1.24.0-00 kubectl=1.24.0-00

# Step 9 --- only on master node (use public IP of master node)

kubeadm config images pull --cri-socket /run/containerd/containerd.sock --kubernetes-version v1.24.0  (execute on master node only )
kubeadm init --pod-network-cidr=10.244.0.0/16 --upload-certs --kubernetes-version=v1.24.0 --control-plane-endpoint=publicIPofMasterIP --ignore-preflight-errors=Mem --cri-socket /run/containerd/containerd.sock  (execute on master node only )
## copy join commnad and fire on all worker nodes only (Not on Master Node) to join them in k8s cluster  
mkdir -p $HOME/.kube  (execute on master node only)
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config  (execute on master node only)
sudo chown $(id -u):$(id -g) $HOME/.kube/config  (execute on master node only)

kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml  (execute on master node)
watch kubectl get nodes
watch kubectl get pods -n kube-system
